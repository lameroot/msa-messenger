{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user and return access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "schema": {
                            "$ref": "#/definitions/auth_models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generate a new access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh authentication token",
                "parameters": [
                    {
                        "description": "Refresh token request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_models.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token",
                        "schema": {
                            "$ref": "#/definitions/auth_models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "$ref": "#/definitions/auth_models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists or nickname taken",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/update": {
            "put": {
                "description": "Update the avatar URL and info for an authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "Update user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user information",
                        "schema": {
                            "$ref": "#/definitions/auth_models.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/auth_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "description": "Get the list of friends for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Get friends",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_models.Friend"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user_http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a user to the current user's friends list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Add user to friends",
                "parameters": [
                    {
                        "description": "Add user to friends request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_models.AddUserToFriendsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_models.AddUserToFriendsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user_http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a user from the current user's friends list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Delete user from friends",
                "parameters": [
                    {
                        "description": "Delete user from friends request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_models.DeleteUserFromFriendsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/friends/accept": {
            "post": {
                "description": "Accept a friend request from another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Accept friend request",
                "parameters": [
                    {
                        "description": "Accept friend request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_models.AcceptFriendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/friends/reject": {
            "post": {
                "description": "Reject a friend request from another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "friends"
                ],
                "summary": "Reject friend request",
                "parameters": [
                    {
                        "description": "Reject friend request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_models.RejectFriendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messaging/messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve messages for the authenticated user based on provided criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Get messages for a user",
                "parameters": [
                    {
                        "description": "Message retrieval criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messaging_models.GetMessagesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/messaging_models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad request or user not found",
                        "schema": {
                            "$ref": "#/definitions/messaging_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/messaging_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messaging/send": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send a message from the authenticated user to another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messaging"
                ],
                "summary": "Send a message",
                "parameters": [
                    {
                        "description": "Message details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/messaging_models.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "schema": {
                            "$ref": "#/definitions/messaging_models.SendMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or user not found",
                        "schema": {
                            "$ref": "#/definitions/messaging_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/messaging_http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "auth_models.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/definitions/auth_models.Token"
                },
                "user": {
                    "$ref": "#/definitions/auth_models.User"
                }
            }
        },
        "auth_models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "auth_models.RefreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth_models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "nickname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "auth_models.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth_models.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/definitions/auth_models.Token"
                }
            }
        },
        "auth_models.UpdateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "auth_models.User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "auth_models.UserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/auth_models.User"
                }
            }
        },
        "messaging_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "messaging_models.GetMessagesRequest": {
            "type": "object",
            "properties": {
                "count_messages": {
                    "type": "integer"
                },
                "friend_id": {
                    "type": "string"
                }
            }
        },
        "messaging_models.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "receiver_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "sent_time": {
                    "type": "integer"
                }
            }
        },
        "messaging_models.SendMessageRequest": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sent_time": {
                    "type": "integer"
                }
            }
        },
        "messaging_models.SendMessageResponse": {
            "type": "object",
            "properties": {
                "delivery_time": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "user_models.AcceptFriendRequest": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                }
            }
        },
        "user_models.AddUserToFriendsRequest": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                }
            }
        },
        "user_models.AddUserToFriendsResponse": {
            "type": "object",
            "properties": {
                "friendship_status": {
                    "$ref": "#/definitions/user_models.FriendshipStatus"
                }
            }
        },
        "user_models.DeleteUserFromFriendsRequest": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                }
            }
        },
        "user_models.Friend": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                },
                "friendship_status": {
                    "$ref": "#/definitions/user_models.FriendshipStatus"
                }
            }
        },
        "user_models.FriendshipStatus": {
            "type": "string",
            "enum": [
                "pending",
                "accepted",
                "rejected"
            ],
            "x-enum-varnames": [
                "Pending",
                "Accepted",
                "Rejected"
            ]
        },
        "user_models.RejectFriendRequest": {
            "type": "object",
            "properties": {
                "friend_id": {
                    "type": "string"
                }
            }
        }
    }
}